name: Release

on:
  workflow_dispatch:
  release:
    types: [published, prereleased]

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 🧩 Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # OctoPrint provides its own setuptools hooks — required for packaging
          python -m pip install "octoprint>=1.10.0"

      - name: 🔨 Build source distribution
        run: |
          python setup.py sdist --formats=zip

      - name: 🚚 Rename artifact
        run: |
          mkdir -p dist_renamed
          mv dist/*.zip dist_renamed/sdist.zip

      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist_renamed/sdist.zip

  test-install:
    name: 🧪 Installation tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.12"]

    steps:
      - name: 🏗 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: 🧩 Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install octoprint

      - name: 🧪 Test plugin install
        run: |
          python -m pip install dist/sdist.zip

    upload-asset:
    name: 📦 Upload asset to release
    needs: [build, test-install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: 🧩 Ensure a tag exists
        id: tag_check
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ "$TAG_NAME" == "main" || "$TAG_NAME" == "master" || "$TAG_NAME" == "HEAD" ]]; then
            TAG_NAME="manual-${GITHUB_RUN_NUMBER}"
            echo "Creating temporary tag: $TAG_NAME"
            git tag "$TAG_NAME"
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: 🚀 Create release and upload asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_check.outputs.tag_name }}
          name: "Automated build ${{ steps.tag_check.outputs.tag_name }}"
          files: dist/sdist.zip
          generate_release_notes: true
